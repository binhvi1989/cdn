/**
 * jQuery plugin paroller.js v1.4.7
 * https://github.com/tgomilar/paroller.js
 * preview: https://tgomilar.github.io/paroller/
 * author: Tanja Gomilar
 **/
(function (factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        define('parollerjs', ['jquery'], factory);
    } else if (typeof module === 'object' && typeof module.exports === 'object') {
        module.exports = factory(require('jquery'));
    }
    else {
        factory(jQuery);
    }
})(function ($) {
    'use strict';

    var working = false;
    var scrollAction = function() {
        working = false;
    };

    var setDirection = {
        bgVertical: function (elem, bgOffset) {
            return elem.css({'background-position': 'center ' + -bgOffset + 'px'});
        },
        bgHorizontal: function (elem, bgOffset) {
            return elem.css({'background-position': -bgOffset + 'px' + ' center'});
        },
        vertical: function (elem, elemOffset, transition, oldTransform) {
            (oldTransform === 'none' ? oldTransform = '' : true);
            return elem.css({
                '-webkit-transform': 'translateY(' + elemOffset + 'px)' + oldTransform,
                '-moz-transform': 'translateY(' + elemOffset + 'px)' + oldTransform,
                'transform': 'translateY(' + elemOffset + 'px)' + oldTransform,
                'transition': transition,
                'will-change': 'transform'
            });
        },
        horizontal: function (elem, elemOffset, transition, oldTransform) {
            (oldTransform === 'none' ? oldTransform = '' : true);
            return elem.css({
                '-webkit-transform': 'translateX(' + elemOffset + 'px)' + oldTransform,
                '-moz-transform': 'translateX(' + elemOffset + 'px)' + oldTransform,
                'transform': 'translateX(' + elemOffset + 'px)' + oldTransform,
                'transition': transition,
                'will-change': 'transform'
            });
        }
    };

    var setMovement = {
        factor: function (elem, width, options) {
            var dataFactor = elem.data('paroller-factor');
            var factor = (dataFactor) ? dataFactor : options.factor;
            if (width < 576) {
                var dataFactorXs = elem.data('paroller-factor-xs');
                var factorXs = (dataFactorXs) ? dataFactorXs : options.factorXs;
                return (factorXs) ? factorXs : factor;
            }
            else if (width <= 768) {
                var dataFactorSm = elem.data('paroller-factor-sm');
                var factorSm = (dataFactorSm) ? dataFactorSm : options.factorSm;
                return (factorSm) ? factorSm : factor;
            }
            else if (width <= 1024) {
                var dataFactorMd = elem.data('paroller-factor-md');
                var factorMd = (dataFactorMd) ? dataFactorMd : options.factorMd;
                return (factorMd) ? factorMd : factor;
            }
            else if (width <= 1200) {
                var dataFactorLg = elem.data('paroller-factor-lg');
                var factorLg = (dataFactorLg) ? dataFactorLg : options.factorLg;
                return (factorLg) ? factorLg : factor;
            } else if (width <= 1920) {
                var dataFactorXl = elem.data('paroller-factor-xl');
                var factorXl = (dataFactorXl) ? dataFactorXl : options.factorXl;
                return (factorXl) ? factorXl : factor;
            } else {
                return factor;
            }
        },
        bgOffset: function (offset, factor) {
            return Math.round(offset * factor);
        },
        transform: function (offset, factor, windowHeight, height) {
            return Math.round((offset - (windowHeight / 2) + height) * factor);
        }
    };

    var clearPositions = {
        background: function (elem) {
            return elem.css({'background-position': 'unset'});
        },
        foreground: function (elem) {
            return elem.css({
                'transform' : 'unset',
                'transition' : 'unset'
            });
        }
    };

    $.fn.paroller = function (options) {
        var windowHeight = $(window).height();
        var documentHeight = $(document).height();

        // default options
        var options = $.extend({
            factor: 0, // - to +
            factorXs: 0, // - to +
            factorSm: 0, // - to +
            factorMd: 0, // - to +
            factorLg: 0, // - to +
            factorXl: 0, // - to +
            transition: 'translate 0.1s ease', // CSS transition
            type: 'background', // foreground
            direction: 'vertical' // horizontal
        }, options);

        return this.each(function () {
            var $this = $(this);
            var width = $(window).width();
            var offset = $this.offset().top;
            var height = $this.outerHeight();

            var dataType = $this.data('paroller-type');
            var dataDirection = $this.data('paroller-direction');
            var dataTransition = $this.data('paroller-transition');
            var oldTransform = $this.css('transform');

            var transition = (dataTransition) ? dataTransition : options.transition;
            var type = (dataType) ? dataType : options.type;
            var direction = (dataDirection) ? dataDirection : options.direction;
            var factor = 0;
            var bgOffset = setMovement.bgOffset(offset, factor);
            var transform = setMovement.transform(offset, factor, windowHeight, height);

            if (type === 'background') {
                if (direction === 'vertical') {
                    setDirection.bgVertical($this, bgOffset);
                }
                else if (direction === 'horizontal') {
                    setDirection.bgHorizontal($this, bgOffset);
                }
            }
            else if (type === 'foreground') {
                if (direction === 'vertical') {
                    setDirection.vertical($this, transform, transition, oldTransform);
                }
                else if (direction === 'horizontal') {
                    setDirection.horizontal($this, transform, transition, oldTransform);
                }
            }

            $(window).on('resize', function () {
                var scrolling = $(this).scrollTop();
                width = $(window).width();
                offset = $this.offset().top;
                height = $this.outerHeight();
                factor = setMovement.factor($this, width, options);
                bgOffset = Math.round(offset * factor);
                transform = Math.round((offset - (windowHeight / 2) + height) * factor);

                if (! working) {
                    window.requestAnimationFrame(scrollAction);
                    working = true;
                }

                if (type === 'background') {
                    clearPositions.background($this);
                    if (direction === 'vertical') {
                        setDirection.bgVertical($this, bgOffset);
                    }
                    else if (direction === 'horizontal') {
                        setDirection.bgHorizontal($this, bgOffset);
                    }
                }
                else if ((type === 'foreground') && (scrolling <= documentHeight)) {
                    clearPositions.foreground($this);
                    if (direction === 'vertical') {
                        setDirection.vertical($this, transform, transition);
                    }
                    else if (direction === 'horizontal') {
                        setDirection.horizontal($this, transform, transition);
                    }
                }
            });

            $(window).on('scroll', function () {
                var scrolling = $(this).scrollTop();
                var scrollTop = $(document).scrollTop();

                if (scrollTop === 0) {
                    factor = 0;
                } else {
                    factor = setMovement.factor($this, width, options);
                }

                bgOffset = Math.round((offset - scrolling) * factor);
                transform = Math.round(((offset - (windowHeight / 2) + height) - scrolling) * factor);

                if (! working) {
                    window.requestAnimationFrame(scrollAction);
                    working = true;
                }

                if (type === 'background') {
                    if (direction === 'vertical') {
                        setDirection.bgVertical($this, bgOffset);
                    }
                    else if (direction === 'horizontal') {
                        setDirection.bgHorizontal($this, bgOffset);
                    }
                }
                else if ((type === 'foreground') && (scrolling <= documentHeight)) {
                    if (direction === 'vertical') {
                        setDirection.vertical($this, transform, transition, oldTransform);
                    }
                    else if (direction === 'horizontal') {
                        setDirection.horizontal($this, transform, transition, oldTransform);
                    }
                }
            });
        });
    };
});




/*smoother scrool*/
! function(e) {
    e.fn.easeScroll = function(t) {
        ! function() {
            function a() {
                w.keyboardSupport && c("keydown", n)
            }

            function o() {
                if (document.body) {
                    var e = document.body,
                        t = document.documentElement,
                        o = window.innerHeight,
                        r = e.scrollHeight;
                    if (S = document.compatMode.indexOf("CSS") >= 0 ? t : e, p = e, a(), y = !0, top != self) v = !0;
                    else if (r > o && (e.offsetHeight <= o || t.offsetHeight <= o)) {
                        var n = !1;
                        if (t.style.height = "auto", setTimeout(function() {
                                n || t.scrollHeight == document.height || (n = !0, setTimeout(function() {
                                    t.style.height = document.height + "px", n = !1
                                }, 100))
                            }, 10), S.offsetHeight <= o) {
                            var i = document.createElement("div");
                            i.style.clear = "both", e.appendChild(i)
                        }
                    }
                    w.fixedBackground || g || (e.style.backgroundAttachment = "scroll", t.style.backgroundAttachment = "scroll")
                }
            }

            function r(e, t, a, o) {
                if (o || (o = 1e3), function(e, t) {
                        e = e > 0 ? 1 : -1, t = t > 0 ? 1 : -1, (b.x !== e || b.y !== t) && (b.x = e, b.y = t, D = [], M = 0)
                    }(t, a), 1 != w.accelerationMax) {
                    var r = +new Date - M;
                    if (r < w.accelerationDelta) {
                        var n = (1 + 30 / r) / 2;
                        n > 1 && (n = Math.min(n, w.accelerationMax), t *= n, a *= n)
                    }
                    M = +new Date
                }
                if (D.push({
                        x: t,
                        y: a,
                        lastX: 0 > t ? .99 : -.99,
                        lastY: 0 > a ? .99 : -.99,
                        start: +new Date
                    }), !H) {
                    var i = e === document.body,
                        l = function() {
                            for (var r = +new Date, n = 0, c = 0, u = 0; u < D.length; u++) {
                                var s = D[u],
                                    d = r - s.start,
                                    p = d >= w.animationTime,
                                    m = p ? 1 : d / w.animationTime;
                                w.pulseAlgorithm && (m = f(m));
                                var h = s.x * m - s.lastX >> 0,
                                    g = s.y * m - s.lastY >> 0;
                                n += h, c += g, s.lastX += h, s.lastY += g, p && (D.splice(u, 1), u--)
                            }
                            i ? window.scrollBy(n, c) : (n && (e.scrollLeft += n), c && (e.scrollTop += c)), t || a || (D = []), D.length ? C(l, e, o / w.frameRate + 1) : H = !1
                        };
                    C(l, e, 0), H = !0
                }
            }

            function n(e) {
                var t = e.target,
                    a = e.ctrlKey || e.altKey || e.metaKey || e.shiftKey && e.keyCode !== x.spacebar;
                if (/input|textarea|select|embed/i.test(t.nodeName) || t.isContentEditable || e.defaultPrevented || a) return !0;
                if (u(t, "button") && e.keyCode === x.spacebar) return !0;
                var o = 0,
                    n = 0,
                    i = l(p),
                    c = i.clientHeight;
                switch (i == document.body && (c = window.innerHeight), e.keyCode) {
                    case x.up:
                        n = -w.arrowScroll;
                        break;
                    case x.down:
                        n = w.arrowScroll;
                        break;
                    case x.spacebar:
                        n = -(e.shiftKey ? 1 : -1) * c * .9;
                        break;
                    case x.pageup:
                        n = .9 * -c;
                        break;
                    case x.pagedown:
                        n = .9 * c;
                        break;
                    case x.home:
                        n = -i.scrollTop;
                        break;
                    case x.end:
                        var s = i.scrollHeight - i.scrollTop - c;
                        n = s > 0 ? s + 10 : 0;
                        break;
                    case x.left:
                        o = -w.arrowScroll;
                        break;
                    case x.right:
                        o = w.arrowScroll;
                        break;
                    default:
                        return !0
                }
                r(i, o, n), e.preventDefault()
            }

            function i(e, t) {
                for (var a = e.length; a--;) T[A(e[a])] = t;
                return t
            }

            function l(e) {
                var t = [],
                    a = S.scrollHeight;
                do {
                    var o = T[A(e)];
                    if (o) return i(t, o);
                    if (t.push(e), a === e.scrollHeight) {
                        if (!v || S.clientHeight + 10 < a) return i(t, document.body)
                    } else if (e.clientHeight + 10 < e.scrollHeight && (overflow = getComputedStyle(e, "").getPropertyValue("overflow-y"), "scroll" === overflow || "auto" === overflow)) return i(t, e)
                } while (e = e.parentNode)
            }

            function c(e, t, a) {
                window.addEventListener(e, t, a || !1)
            }

            function u(e, t) {
                return (e.nodeName || "").toLowerCase() === t.toLowerCase()
            }

            function s(e, t) {
                return Math.floor(e / t) == e / t
            }

            function d(e) {
                var t, a;
                return 1 > (e *= w.pulseScale) ? t = e - (1 - Math.exp(-e)) : (e -= 1, t = (a = Math.exp(-1)) + (1 - Math.exp(-e)) * (1 - a)), t * w.pulseNormalize
            }

            function f(e) {
                return e >= 1 ? 1 : 0 >= e ? 0 : (1 == w.pulseNormalize && (w.pulseNormalize /= d(1)), d(e))
            }
            var p, m = e.extend({
                    frameRate: 20,
                    animationTime: 1e3,
                    stepSize: 40,
                    pulseAlgorithm: !0,
                    pulseScale: 8,
                    pulseNormalize: 1,
                    accelerationDelta: 20,
                    accelerationMax: 1,
                    keyboardSupport: !0,
                    arrowScroll: 50,
                    touchpadSupport: !0,
                    fixedBackground: !0
                }, t),
                h = {
                    frameRate: m.frameRate,
                    animationTime: m.animationTime,
                    stepSize: m.stepSize,
                    pulseAlgorithm: m.pulseAlgorithm,
                    pulseScale: m.pulseScale,
                    pulseNormalize: m.pulseNormalize,
                    accelerationDelta: m.accelerationDelta,
                    accelerationMax: m.accelerationMax,
                    keyboardSupport: m.keyboardSupport,
                    arrowScroll: m.arrowScroll,
                    touchpadSupport: m.touchpadSupport,
                    fixedBackground: m.fixedBackground,
                    excluded: ""
                },
                w = h,
                g = !1,
                v = !1,
                b = {
                    x: 0,
                    y: 0
                },
                y = !1,
                S = document.documentElement,
                k = [120, 120, 120],
                x = {
                    left: 37,
                    up: 38,
                    right: 39,
                    down: 40,
                    spacebar: 32,
                    pageup: 33,
                    pagedown: 34,
                    end: 35,
                    home: 36
                },
                D = (w = h, []),
                H = !1,
                M = +new Date,
                T = {};
            setInterval(function() {
                T = {}
            }, 1e4);
            var z, A = function() {
                    var e = 0;
                    return function(t) {
                        return t.uniqueID || (t.uniqueID = e++)
                    }
                }(),
                C = window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(e, t, a) {
                    window.setTimeout(e, a || 1e3 / 60)
                },
                N = /chrome|iPad/i.test(window.navigator.userAgent);
            "onmousewheel" in document && N && (c("mousedown", function(e) {
                p = e.target
            }), c("mousewheel", function(e) {
                y || o();
                var t = e.target,
                    a = l(t);
                if (!a || e.defaultPrevented || u(p, "embed") || u(t, "embed") && /\.pdf/i.test(t.src)) return !0;
                var n = e.wheelDeltaX || 0,
                    i = e.wheelDeltaY || 0;
                return n || i || (i = e.wheelDelta || 0), !(w.touchpadSupport || ! function(e) {
                    if (e) {
                        e = Math.abs(e), k.push(e), k.shift(), clearTimeout(z);
                        var t = k[0] == k[1] && k[1] == k[2],
                            a = s(k[0], 120) && s(k[1], 120) && s(k[2], 120);
                        return !(t || a)
                    }
                }(i)) || (Math.abs(n) > 1.2 && (n *= w.stepSize / 120), Math.abs(i) > 1.2 && (i *= w.stepSize / 120), r(a, -n, -i))
            }), c("load", o))
        }()
    }
}(jQuery);